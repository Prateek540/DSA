<-------------------GIT/GITHUB-------------------->


1) To check the version (git --version)
2) To check or set or edit or configure username or email (git config --global --edit user.name or user.email)
3) To initialize local repository to a git repository (git init)
4) To check status of files (git status)
5) To add files to the staging area (git add .)
6) To make a commit to local repository not remote repository (git commit -m "Message")
7) To check commit history or version history (git log)
8) To check which branch (git branch)
9) To create branch (git branch branchName)
10) To switch to another branch (git checkout branchName)
11) To create and switch to new branch (git checkout -b prateek/feature)
12) To merge the branch to current branch (git merge branchName)
13) To ensure that certain files not tracked by Git remain untracked (.gitignore is used)
14) To add remote origin in git repository (git remote add origin <URL>)
15) To rename master branch to main (git branch -m main)
16) To push your local changes to your remote repository (git push -u origin branchName)
17) To pull latest changes from remote repository to local repository (git pull origin branchName)
18) To clone remote repository which is synchronized with target repository (git clone <URL>)
19) To create independent copy of remote project use Fork
20) States of a file in git are a)modified b)Staged c) committed
21) Working directory -(git add)-> Staging area -(git commit)-> repository
22) To view changes made in the file (git diff)
23) The git fetch command downloads commits, files, and refs from a remote repository into your local repo
24) git pull = git fetch + git merge
25) git pull copies changes from a remote repository directly into your working directory, while git fetch does not.
26) The git fetch command only copies changes into your local Git repo. The git pull command does both.
27) Rebasing in Git is a process of integrating a series of commits on top of another base tip.
It takes all the commits of a branch and appends them to the commits of a new branch.
28) git stash temporarily shelves (or stashes) changes you've made to your working copy so you can work on something else,
and then come back and re-apply them later on.
29) To remove untracked files from working repository (git clean)


<------------------------HTML/CSS-------------------------->


1) Tags are the starting and ending parts of an HTML element. They begin with < symbol and end with > symbol.
Whatever is written inside < and > are called tags.
2) Elements consist of both the opening and closing tags as well as what’s inside those tags like the content.
3) Attributes are used to define the character of an HTML element as well as for styling.
4) Comment in HTML <!-- ABC....  -->
5) CSS box model defines the layout and design of CSS elements. It consists of content, padding, border and margin.
6) Classes are not unique and have multiple elements. Whereas ID is unique and it can be assigned to a single element.
7) Block Elements are <div> and <p>. They usually start on a new line and can take space for an entire row or width.
8) Inline elements are <a>, <span>, <strong>, and <img> tags. They don't start on a new line. However, they appear on the same line as the content and tags beside them.
9) Inline block elements have padding and margins and set height and width values. Though, they are similar to inline elements.
10) CSS Grid Layout is a two-dimensional system along with rows and columns. It is used for large-sized layouts.
11) Flexbox is a Grid layout with a one-dimensional system either within a row or a column. It is used for the components of an application.
12) Five types of positioning are static, absolute, relative, fixed and sticky.
13) Static is the default value for elements. The element is positioned according to the normal flow of the document. The left, right, top, bottom and z-index properties do not affect an element with position: static.
14) Relative elements with position: relative remain in the normal flow of the document. But, unlike static elements, the left, right, top, bottom and z-index properties affect the position of the element.
15) Elements with position: absolute are positioned relative to their parent elements. The element is removed from the normal document flow. The other elements will behave as if that element is not in the document. No space is created for the element in the page layout. The values of left, top, bottom and right determine the final position of the element.
One thing to note is that an element with position: absolute is positioned relative to its closest positioned ancestor. That means that the parent element has to have a position value other than position: static.
16) Fixed position elements are similar to absolutely positioned elements. They are also removed from the normal flow of the document. But unlike absolutely positioned elements, they are always positioned relative to the <html> element.
17) position: sticky is a mix of position: relative and position: fixed. It acts like a relatively positioned element until a certain scroll point and then it acts like a fixed element.


<-------------------JavaScript-------------------->


1)Data types supported are String, number, Boolean, Symbol, Null, Object, Undefined, BigInt.
2)Closure gives access to outer functions scope from inner functions scope.
3)A Lexical environment is a place where variables and functions live during program execution.
4)The `call()` method allows you to invoke a function with a specified `this` value and individual arguments passed in as separate parameters. It takes the context object as the first argument, followed by the function arguments.
5)The `apply()` method is similar to `call()`, but it accepts arguments as an array or an array-like object. It also allows you to set the `this` value explicitly.
6)The `bind()` method creates a new function that has a specified `this` value and, optionally, predefined arguments. It allows you to create a function with a fixed execution context that can be called later.
7)This keyword refers to an object which itself depends on how the function is being called.
8)Asynchronous operations are handled by callbacks, promises and async/await.
9)Null represents intentional absence of any value in an object.
10)Undefined represents absence of any value in any variable.
11)Objects have a hidden property called [Prototype] that is either null or references another object. This property is a prototype. Eg. rabbit.__proto__ = animal.
12)LocalStorage(window object property) saves key/value pairs without expiry date. The data persists even if the browser or pc is closed. Not suitable for large amounts of data. Do not store sensitive data in localstorage. 5MB limit. Only stores data in string format.
13)SessionStorage saves data until the browser session is not closed. Also stores data in string format. 5MB limit.
14)Cookies let you store data in the browser. Data expiration can be set manually. Limit is 4KB. Can be sent to server or to client.
15)CORS is a security feature implemented by web browsers to restrict web pages from making requests to a different domain than the one that served the web page.
16)Spread used to split up array elements or object properties. Example const newArray = [...oldArray, 1, 2];
17)Rest used to merge a list of arguments in an array. Example function sortArgs(...args) { return args.sort(); }
18)Destructuring allows us to extract elements from array or object properties and store them in variables.
19)Generators are functions but whenever they generate a value they do that by yield not by return keyword. The yield statement suspends the function’s execution and sends a value back to the caller, but retains enough state to enable the function to resume where it is left off. When resumed, the function continues execution immediately after the last yield run.


<-------------------React/Redux-------------------->


1)Alternative to CRA is Vite.
2)Browsers can only read JS objects but not JSX. To transform JSX into JS objects, JSX transformers like Babel are used.
3)React apps are declarative in nature.(Telling what to do instead how to do)
4)Fragments are empty wrapper components which are not rendered on the DOM tree.
5)Portals provide a way to render components into DOM nodes outside the root component hierarchy. Used for modal, popovers and dropdown menus.
6)Refs are references to DOM elements that help in accessing or updating DOM elements. It is simply an object with current property that can hold a value.
7)React Reconciliation is the process through which React updates the Browser DOM. It makes the DOM updates faster in React. It updates the virtual DOM first and then uses the diffing algorithm to make efficient and optimized updates in the Real DOM.
8)Redux is a predictable state container for JS apps.
9)useSelector allows you to extract data from redux store state using a selector function. Equivalent to mapStateToProps it also helps in subscribing to redux stores.
10)useDispatch returns a reference to the dispatch function. Used to dispatch actions as needed.
11)Core concepts of redux are single source of truth, state read only and the changes are made by pure reducer functions.
12)configureStore is a method to create a store. It is an abstraction over createStore that adds good defaults to the store setup.
13)createSlice is a  function that accepts an initial state, an object of reducer functions, and a "slice name", and automatically generates action creators and action types that correspond to the reducers and state.
14)Hooks are functions that allow you to use state and other react features without defining class components.
15)<Suspense> lets you display fallback UI until its children have finished loading.
16)Error Boundaries help in handling errors that occur during rendering.


<-------------------Node/Express-------------------->


1)Nodejs is a runtime environment built on chrome V8 engine.
2)Main features of node js are Asynchronous, non-blocking, single threaded and event driven.
3)express.Router() is used to create a new Router object.
4)Hashing is an encryption technique to protect the data from unauthorized access. It is an irreversible process used for passwords.
5)Bcryptjs is a popular hashing library to store passwords.
6)Encoding is a reversible process to encode then decode generally used for data transmission.
7)Encryption is a reversible process used to protect sensitive data for storage.
8)JWT is a JSON object used to securely transfer information over the web. It is mainly composed of header, payload and signature separated by dots.
9)Multer is a node js middleware used for handling form-data like files.
10)Environment variables are used to hide sensitive data.
11)CORS stands for cross origin resource sharing; it allows or restricts web apps to make requests to other domains.
12)Npm and yarn are dependency managers.


<-------------------MongoDB/Mongoose-------------------->


1)Database is a container of collections.
2)Collection is a group of documents in DB same as tables in SQL.
3)Document is a record inside of a collection same as a row in SQL. It is just a JSON object.
4)Field is a key/value pair in documents same as columns in SQL.
5)No support for joins. Mongoose has a populate method to achieve the result. And in mongodb $lookup(aggregation) is used.
6)Sharding is a method for distributing or partitioning data across multiple machines.
7)Indexing is efficient querying of data.